# .github/workflows/terraform.yml
name: 'Terraform Infrastructure Deployment'

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**' # Trigger only on changes to Terraform code
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'

env:
  # Reference the GitHub Secret you created (us-east-1, etc.)
  AWS_REGION: ${{ secrets.AWS_REGION }} 
  TF_VERSION: 1.6.0 # Specify a stable, supported Terraform version

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Debug - show workspace and terraform dir
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "PWD: $(pwd)"
          echo "Repo root contents:"
          ls -la
          echo "terraform directory contents (if present):"
          ls -la terraform || true
        shell: bash

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          
      - name: Terraform Init
        id: init
        run: terraform init -no-color
        working-directory: ./terraform
        shell: bash

      - name: Terraform Format Check
        run: terraform fmt -check
        working-directory: ./terraform
        shell: bash

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: |
          # create a binary plan file and print it so plan failures show full output
          terraform plan -no-color -input=false -out=tfplan
          terraform show -no-color tfplan
        working-directory: ./terraform
        shell: bash

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        working-directory: ./terraform
        shell: bash
